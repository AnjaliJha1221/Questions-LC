class Solution {
public:
    //int solve(int n, vector <int> &t ){
    //     if(n == 0) return 0;
    //     else if(n == 1 || n == 2) return 1;

    //     if(t[n] != -1) return t[n];
    //     else{
    //         t[n] = (solve(n-1, t) + solve(n-2, t)+ solve(n-3, t));
    //         return t[n];
    //     }
        
    // }

    // int tribonacci(int n) {
    //     vector <int> tri(n+1, -1);
    //     return solve(n, tri);
    // }
    
    // iterative method
    int tribonacci(int n){
        
        if(n == 0) return 0;
        else if(n == 1 || n == 2) return 1;

        else{
            int tri[n+1];
            tri[0] = 0, tri[1] = tri[2] = 1;
            for(int i = 3; i <= n;  i++){
                tri[i] = tri[i-1]+ tri[i-2] + tri[i-3];
            }
        return tri[n];
        }
        
    }
};

